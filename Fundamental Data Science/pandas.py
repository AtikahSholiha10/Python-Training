# -*- coding: utf-8 -*-
"""pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C1dxWzMGNEKm1vpVWxNjkOnadZ_ZopKc
"""

import pandas as pd

"""Series"""

temp= [1,19,15,12,18]
temp_series = pd.Series(temp)

print(temp_series)

temp_series.describe()

temp_series.is_unique

dev = temp_series.std()
dev

temp[2]

for value in temp_series:
  print(value)

temp_series += 1
temp_series

temp_series.sort_values(inplace=True)
temp_series

temp_series.reset_index(drop=True, inplace=True)
temp_series

"""dataframe"""

makanan = pd.Series(['nasi','ayam','mie'])
harga = pd.Series([15000,10000,12000])
rating = pd.Series([4.7,4.8,5])

print(makanan,harga,rating)

tabel = pd.DataFrame({
    'Nama' : makanan,
    'harga' : harga,
    'rating' : rating
})

tabel

tabel.describe()

tabel.describe(include='all')

tabel['Nama']

tabel[['Nama','rating']]

tabel.iloc[1]

tabel[:2]

tabel.loc[1,'harga']

url = "https://download.mlcc.google.com/mledu-datasets/california_housing_train.csv"
housing = pd.read_csv(url)

housing.head(10)

"""modify values"""

housing.loc[1,'total_bedrooms']=1902.0
housing.head()

housing['population'] = housing['population']/1000
housing.head()

"""visualisasi"""

housing.hist()

housing['persons_per_bedroom'] = housing['population']/housing['total_bedrooms']
housing.head()

url = "https://download.mlcc.google.com/mledu-datasets/california_housing_train.csv"
housing = pd.read_csv(url)

housing.head()

housing.shape

housing.columns

type(housing.values)

housing.isna()

housing.isna().sum()

above20 = housing[housing['housing_median_age'] > 20.0]
above20

c1 = housing['housing_median_age'] > 50.0
c2 = housing['total_bedrooms'] > 500.0

housing[c1&c2]

housing[(housing['housing_median_age'] > 50.0)&(housing['total_bedrooms'] > 500.0)]

body_measurement_df = pd.DataFrame.from_records(( # membuat dataframe manual
  (2, 83.82, 8.4),
  (4, 99.31, 16.97),
  (3, 96.52, 14.41),
  (6, 114.3, 20.14),
  (4, 101.6, 16.91),
  (2, 86.36, 12.64),
  (3, 92.71, 14.23),
  (2, 85.09, 11.11),
  (2, 85.85, 14.18),
  (5, 106.68, 20.01),
  (4, 99.06, 13.17),
  (5, 109.22, 15.36),
  (4, 100.84, 14.78),
  (6, 115.06, 20.06),
  (2, 84.07, 10.02),
  (7, 121.67, 28.4),
  (3, 94.49, 14.05),
  (6, 116.59, 17.55),
  (7, 121.92, 22.96),
), columns=("Age (yrs)", "Height (cm)", "Weight (kg)"))

body_measurement_df

body_measurement_df.groupby('Age (yrs)').mean()

body_measurement_df.groupby('Age (yrs)').max()

body_measurement_df.groupby('Age (yrs)').min()

body_measurement_df.groupby('Age (yrs)').std()

grouped = body_measurement_df.groupby('Age (yrs)').std()
grouped

grouped.index

body_measurement_df

body_measurement_df.sort_values('Height (cm)')

body_measurement_df.sort_values('Weight (kg)')

body_measurement_df.loc[10,'Height (cm)'] = 100.84
body_measurement_df.sort_values(['Height (cm)','Weight (kg)'],inplace=True)

body_measurement_df

